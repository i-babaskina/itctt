@using WebApplicationTest.Models
@model Good

@{
    ViewBag.Title = "GoodsList";
}



<h2>GoodsList</h2>
@Html.ActionLink("Link", "GoodsList", "Goods")
<div class="add-good">
    <form id="addGoodForm" method="post" action="@Url.Action("AddGood", "Goods")" class="form-horizontal">
        <div class="form-group">
            <label for="newGoodName">Name</label>
            <input type="text" class="form-control" name="Name" id="newGoodName">
            <span class="field-validation-valid text-danger" data-valmsg-for="Name" data-valmsg-replace="false">test message for name</span>
        </div>
        <div class="form-group">
            <label for="newGoodPrice">Price</label>
            <input type="text" class="form-control" name="Price" id="newGoodPrice">
            <span class="field-validation-valid text-danger" data-valmsg-for="Name" data-valmsg-replace="false">test message for name</span>
        </div>
        <button type="submit" class="btn btn-success">Add good</button>
    </form>

    <!--<section id="addGoodForm">
        @using (Html.BeginForm("AddGood", "Goods", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form", id = "loginForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "control-label" })
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @maxlength = "50" })
                @Html.ValidationMessageFor(m => m.Name, "test message for name", new { @class = "text-danger" })
            </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Price, new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.Price, new { @class = "form-control", @maxlength = "7" })
                    @Html.ValidationMessageFor(m => m.Price, "test message for price", new { @class = "text-danger" })
                </div>

                <div class="center-block">
                    <input type="submit" value="Add" class="btn btn-success" />
                </div>
        }
    </section>-->

</div>
<table id="goodsTable"></table>
<div id="jqPager"></div>
<br />

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/jqGrid")

<script type="text/javascript">
    $("#addGoodForm").submit(function (e) {
        var postData = $(this).serializeArray();
        console.log(postData);
        var formURL = $(this).attr("action");
        console.log(formURL);
        $.ajax(
        {
            url: formURL,
            type: "POST",
            data: /*JSON.stringify*/(postData),
            success: function (data, textStatus, jqXHR) {
                alert(textStatus);
                e.preventDefault();
                $('#goodsTable').trigger('reloadGrid');
                    @*setGridParam({ url: '@//Url.Action("GoodsList", "Goods")',*/ datatype: 'json'/*, page: 1*/ }).trigger('reloadGrid');*@
                    },
            error: function (jqXHR, textStatus, errorThrown) {
                alert(textStatus);
            }
        });
        e.preventDefault(); //STOP default action
        
    });

    $("#ajaxform").submit();

    /*$(document).ajaxComplete(function (event, request, settings) {
        alert("complete");
        $('#grid').trigger('reloadGrid');
    });*/

    jQuery("#goodsTable").jqGrid({
        url: '@Url.Action("GoodsList", "Goods")',
        mtype: 'GET',
        datatype: "json",
        colNames: ['Actions', 'Name', 'Price'],
        colModel: [
            { name: 'act', index: 'act', width: 75, sortable: false },
            { name: 'Name', index: 'Name', width: 150, sortable: true, editable: true },
            { name: 'Price', index: 'Price', width: 150, sortable: true, editable: true,
                sorttype: function (cell, rowData) {
                    return (parseInt(rowData.Price));
                }
            }
        ],
        rowNum:10,
        rowList:[10,25,50,100],
        pager: '#jqPager',
        loadonce: true,
        /*navOptions: { reloadGridOptions: { fromServer: true } },*/
        sortname: 'id',
        viewrecords: true,
        sortorder: "desc",
        gridComplete: function () {
            var ids = $("#goodsTable").jqGrid('getDataIDs');
            for (var i = 0; i < ids.length; i++) {
                var cl = ids[i];
                be = "<input style='height:22px;width:20px;' type='button' value='E' onclick=\"jQuery('#goodsTable').editRow('" + cl + "');  \"/>";
                se = "<input id='save" + cl + "' style='height:22px;width:20px;/*visibility:hidden;*/' type='button' value='S' onclick=\"jQuery('#goodsTable').saveRow('" + cl + "');\"  />";
                ce = "<input id='cansel" + cl + "' style='height:22px;width:20px;/*visibility:hidden;*/' type='button' value='C' onclick=\"jQuery('#goodsTable').restoreRow('" + cl + "');\" />";
                jQuery("#goodsTable").jqGrid('setRowData', ids[i], { act: be + se + ce });
            }
        },
        editurl: "@Url.Action("Update", "Goods")",
        caption:"Goods"
    });
    jQuery("#goodsTable").jqGrid('navGrid', '#jqPager', { edit: false, add: false, del: false });



    function visibilityChange(id, isVisible) {
        //var saveButton = document.getElementById("save" + id);
        //var cancelButton = document.getElementById("cancel" + id);
        //alert(id);
        //alert(isVisible);
        //if (isVisible) {
        //    cancelButton.style.visibility = "visible";
        //    saveButton.style.visibility = "visible";
        //}
        //else {
        //    editButton.style.visibility = "visible";
        //    saveButton.style.visibility = "visible";
        //}
    }

    function AddRequired() {
        var x = document.getElementsByClassName("editable");
        for (var i in x) {
            i.required = true;
        }
    }
</script>

